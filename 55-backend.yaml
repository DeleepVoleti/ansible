- name: setting up backend configuration
  hosts: backend
  become: yes 
  vars:
    login_password: ExpenseApp@1
    login_host: db.dilipswebsite.online
  tasks:
  - name: disabling default nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enabling nodejs 20 
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: installing nodejs and mysql
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: latest
    loop:
    - nodejs
    - mysql  
  - name: creating a user expense
    ansible.builtin.user:
      name: expense
  - name: creating directory 
    ansible.builtin.file:
      path : /app
      state: directory
  - name: download and extract the code
    ansible.builtin.unarchive:
      src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /app
      remote_src: yes
  - name: installing application dependencies
    ansible.builtin.command: npm install
    args: 
      chdir: /app
  - name: copying backend.service
    ansible.builtin.copy: 
      src: backend.service
      dest: /etc/systemd/system/backend.service
  - name: reload the deamon 
    ansible.builtin.systemd_service: 
      daemon_reload: yes
  - name: start and enable backend service 
    ansible.builtin.service:
      name: backend 
      state: started
      enabled: yes
  - name: download mysql dependencies for ansible
    ansible.builtin.pip:
      name:
      - pymysql
      - cryptography
      executable: pip3.9  
  - name: install mysql 
    ansible.builtin.dnf:
      name: mysql
      state: latest
  - name: load data into mysql database
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ login_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      state: import
      name: all    
  - name: restart backend service
    ansible.builtin.service:
      name: backend
      state: restarted             

    
